// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop.DataAccess;

#nullable disable

namespace Shop.DataAccess.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20230521190731_SeedDatabase")]
    partial class SeedDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shop.DataAccess.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("027ab076-461c-4f42-a09b-e052b818aa57"),
                            Description = "New category",
                            Name = "Parent Category"
                        },
                        new
                        {
                            Id = new Guid("a71fe02a-a524-49ee-9f26-d156c0b62d6c"),
                            Description = "Child 1 category",
                            Name = "Child 1",
                            ParentCategoryId = new Guid("027ab076-461c-4f42-a09b-e052b818aa57")
                        },
                        new
                        {
                            Id = new Guid("c11cdea5-b146-421b-ad27-bfe07dcb6a66"),
                            Description = "Child 2 category",
                            Name = "Child 2",
                            ParentCategoryId = new Guid("027ab076-461c-4f42-a09b-e052b818aa57")
                        },
                        new
                        {
                            Id = new Guid("7bf9425a-1c6e-4078-817f-1c49b4909404"),
                            Description = "Child 3 category",
                            Name = "Child 3",
                            ParentCategoryId = new Guid("027ab076-461c-4f42-a09b-e052b818aa57")
                        });
                });

            modelBuilder.Entity("Shop.DataAccess.Entities.Detail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3f27ab2-e1f8-4ba4-a4f2-2e5b97bb769b"),
                            Name = "Filter 1",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("0d517bcf-374b-4095-9e7c-4187bd814e27"),
                            Name = "Filter 2",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("fa47c781-8881-4e88-b508-6c401678fbf5"),
                            Name = "Filter 3",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("b1f3413e-8556-401f-8ffe-ba221b9d5e58"),
                            Name = "Filter 4",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("c621e56a-5546-49f1-bb69-fd97c9a00fe1"),
                            Name = "Filter 5",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("fdfa2737-bf8f-4fb8-9477-bfa52cbd198c"),
                            Name = "Filter 6",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("955dd108-63c3-4d6c-83da-f23991091ece"),
                            Name = "Filter 7",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("6dbc33b7-8938-495d-b573-0b36dced335e"),
                            Name = "Filter 8",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("f5c54777-d731-4e88-be25-9f653575ea5c"),
                            Name = "Filter 9",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("751d6ee6-ad02-4452-a626-e6b7f625f421"),
                            Name = "Filter 10",
                            Type = 2
                        });
                });

            modelBuilder.Entity("Shop.DataAccess.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("86ca08b6-3b59-4046-9c3f-260f0631ceb8"),
                            CategoryId = new Guid("c11cdea5-b146-421b-ad27-bfe07dcb6a66"),
                            Description = "This is a description for product 1.",
                            Name = "Product 1",
                            Price = 100m
                        },
                        new
                        {
                            Id = new Guid("75ac7087-0031-4895-8a7c-60e87b96a5d7"),
                            CategoryId = new Guid("a71fe02a-a524-49ee-9f26-d156c0b62d6c"),
                            Description = "This is a description for product 2.",
                            Name = "Product 2",
                            Price = 99m
                        },
                        new
                        {
                            Id = new Guid("b06cc374-2161-474b-bd67-469ab1e757bf"),
                            CategoryId = new Guid("027ab076-461c-4f42-a09b-e052b818aa57"),
                            Description = "This is a description for product 3.",
                            Name = "Product 3",
                            Price = 800m
                        },
                        new
                        {
                            Id = new Guid("15fbac63-871c-4eb5-bcaa-900179d7d8e4"),
                            CategoryId = new Guid("7bf9425a-1c6e-4078-817f-1c49b4909404"),
                            Description = "This is a description for product 4.",
                            Name = "Product 4",
                            Price = 30m
                        },
                        new
                        {
                            Id = new Guid("d09d2c8d-87e7-465b-9364-b409233a8607"),
                            CategoryId = new Guid("7bf9425a-1c6e-4078-817f-1c49b4909404"),
                            Description = "This is a description for product 5.",
                            Name = "Product 5",
                            Price = 50m
                        });
                });

            modelBuilder.Entity("Shop.DataAccess.Entities.ProductDetail", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DetailsId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DetailId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId", "DetailsId");

                    b.HasIndex("DetailsId");

                    b.ToTable("ProductDetails");
                });

            modelBuilder.Entity("Shop.DataAccess.Entities.Category", b =>
                {
                    b.HasOne("Shop.DataAccess.Entities.Category", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Shop.DataAccess.Entities.Product", b =>
                {
                    b.HasOne("Shop.DataAccess.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Shop.DataAccess.Entities.ProductDetail", b =>
                {
                    b.HasOne("Shop.DataAccess.Entities.Detail", "Detail")
                        .WithMany("ProductDetails")
                        .HasForeignKey("DetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.DataAccess.Entities.Product", "Product")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Detail");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Shop.DataAccess.Entities.Category", b =>
                {
                    b.Navigation("ChildCategories");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Shop.DataAccess.Entities.Detail", b =>
                {
                    b.Navigation("ProductDetails");
                });

            modelBuilder.Entity("Shop.DataAccess.Entities.Product", b =>
                {
                    b.Navigation("ProductDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
